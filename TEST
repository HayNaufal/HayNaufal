Bot = {}

Bot["brzz74"] = {
    webhookLink = "https://discord.com/api/webhooks/1006473835496878080/VjJz1Fm8hmfUZ_yS4x5YkJ5kkehpA4s1mlIWhJgmZGGjSLz-S-X_aalonlNI00H27rx_", -- Bot webhook link
    messageId = "1012851060408328342", -- Webhook message id
    startFrom = 1, -- Start from in world list
    worldList = {
        "FCVQI",
        "GGFIJ",
        "BPPFS",
        "UUVPB",
        "UUVPC",
        "UUVPI",
        "CCRYA",
    }, -- World list
    doorFarm = "QWERTYASD" -- Rotation world door id
}
Bot["brzz75"] = {
    webhookLink = "https://discord.com/api/webhooks/1006473835496878080/VjJz1Fm8hmfUZ_yS4x5YkJ5kkehpA4s1mlIWhJgmZGGjSLz-S-X_aalonlNI00H27rx_", -- Bot webhook link
    messageId = "1012851070361407529", -- Webhook message id
    startFrom = 1, -- Start from in world list
    worldList = {
        "FDQDI",
        "XMUOZ",
        "JKRIC",
        "JKRIG",
        "JKRIM",
        "DMTUQ",
        "BYANV",
        "FFHDB",
        "OEKLB",
        "AGKLO",
        "CFBGE",
    }, -- World list
    doorFarm = "QWERTYASD" -- Rotation world door id
}

webhookLinkPack = "https://discord.com/api/webhooks/1013014596212248626/xJUSKYhIgGZCq_KdKgkbhJM9fmPaO7_MhKV_Vna_cOy50-EeIvfzIheNQNoQrs9wQkXS" -- Pack info webhook link
messageIdPack = "1013014706610515998" -- Pack info message id

webhookLinkSeed = "https://discord.com/api/webhooks/1013014596212248626/xJUSKYhIgGZCq_KdKgkbhJM9fmPaO7_MhKV_Vna_cOy50-EeIvfzIheNQNoQrs9wQkXS" -- Seed info webhook link
messageIdSeed = "1013014706610515998" -- Seed info message id

storageSeed, doorSeed, patokanSeed = "LUPISABO", "QWERTYASD", 16 -- Seed storage world name, door id, and patokan
storagePack, doorPack, patokanPack = "LUPISABO", "QWERTYASD", 20 -- Pack storage world name, door id, and patokan

itmId = 4584 -- Block id
itmSeed = itmId + 1 -- Seed id

delayHarvest = 50 -- Harvesting delay
delayPlant = 70 -- Planting delay
delayPunch = 190 -- Punching delay
delayPlace = 130 -- Placing delay

tileNumber = 1 -- Customable from 1 to 5
root = false -- Set true if harvesting max root
buyAfterPNB = false -- Set true if buying and storing pack after each pnb
looping = true -- Set false if not looping world

customTile = false -- Set true if custom breaking pos
customX = 0 -- Custom breaking pos x
customY = 0 -- Custom breaking pos y

whitelist = {"tumpabrik"} -- Player that will be whitelisted
rejoinDelay = 10000 -- Delay of rejoining world after auto leave
peopleEnter = "LEAVE" --[[
    Type :
    - BAN (auto ban)
    - LEAVE (auto leave)
    - NONE (do nothing)
]]

rotationType = "PLANTHV1" --[[
    Type :
    - PLANTHV1 (auto ban)
    - PLANTHV2 (auto leave)
    - HV (do nothing)
    - COLLECT
]]

blacklistTile = false -- Set true if blacklist tile
blacklist = {} -- Tile to blacklist

pack = "World Lock" -- Pack name to display on webhook
packList = {242} -- List of pack id
packName = "world_lock" -- Pack name in store
packPrice = 2000 -- Pack price
packLimit = 200 -- Limit of buying pack before bp full

joinWorldAfterRotation = false -- Set true if join random world after each rotation
worldToJoin = {} -- List of world to join after finishing 1 world

customShow = false -- Set true if showing only custom amount of world
showList = 3 -- Number of custom worlds to be shown
restartTimer = false -- Set true if restart time of farm after looping

items = {
    {name = "World Lock", id = 242, emote = "<:world_lock:1011929928519925820>"},
    {name = "Pepper Tree", id = 4584, emote = "<:pepper_tree:1011930020836544522>"},
    {name = "Pepper Tree Seed", id = 4585, emote = "<:pepper_tree_seed:1011930051744374805>"}
} -- List of item info

goods = {itmId, itmSeed, 98, 18, 32, 6336, 9640} -- Items that wont be trashed (dont edit)

------------------ Dont Touch ------------------
list = {}, waktu = {}, worlds = {}, tileBreak = {}, fossil = 0, profit = 0, listNow = 1, t = os.time(), strWaktu = ""
start = Bot[getBot().name].startFrom
stop = #Bot[getBot().name].worldList
totalList = #Bot[getBot().name].worldList

for i = Bot[getBot().name].startFrom,#Bot[getBot().name].worldList do
    table.insert(worlds,Bot[getBot().name].worldList[i])
end
if looping then
    for i = 0,Bot[getBot().name].startFrom - 1 do
        table.insert(worlds,Bot[getBot().name].worldList[i])
    end
end

for _,pack in pairs(packList) do
    table.insert(goods,pack)
end

for i = math.floor(tileNumber/2),1,-1 do
    i = i * -1
    table.insert(tileBreak,i)
end
for i = 0, math.ceil(tileNumber/2) - 1 do
    table.insert(tileBreak,i)
end

table.insert(whitelist,getBot().name)

function tilePunch(x,y)
    for _,num in pairs(tileBreak) do
        if getTile(x - 1,y + num).fg ~= 0 or getTile(x - 1,y + num).bg ~= 0 then
            return true
        end
    end
    return false
end
function tilePlace(x,y)
    for _,num in pairs(tileBreak) do
        if getTile(x - 1,y + num).fg == 0 and getTile(x - 1,y + num).bg == 0 then
            return true
        end
    end
    return false
end

function bl()
    blist = {}
    for _,tile in pairs(getTiles()) do
        if tile.fg == 6 then
            doorX = tile.x
            doorY = tile.y
        end
    end
    for _,tile in pairs(blacklist) do
        table.insert(blist,{x = doorX + tile.x, y = doorY + tile.y})
    end
end

function check(x,y)
    for _,tile in pairs(blist) do
        if x == tile.x and y == tile.y then
            return false
        end
    end
    return true
end

function warp(world,id)
    while getBot().world ~= world:upper() do
        sendPacket(3,"action|join_request\nname|"..world:upper())
        sleep(5000)
    end
    while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
        sendPacket(3,"action|join_request\nname|"..world:upper().."|"..id:upper())
        sleep(1000)
    end
end

function waktuWorld()
    strWaktu = ""
    if customShow then
        for i = showList,1,-1 do
            newList = listNow - i
            if newList <= 0 then
                newList = newList + totalList
            end
            strWaktu = strWaktu.."\n"..Bot[getBot().name].worldList[newList]:upper().." ( "..(waktu[Bot[getBot().name].worldList[newList]] or "?").." )"
        end
    else
        for _,world in pairs(Bot[getBot().name].worldList) do
            strWaktu = strWaktu.."\n"..world:upper().." ( "..(waktu[world] or "?").." )"
        end
    end
end

function includesString(table, string)
    for _,str in pairs(table) do
        if str:lower() == string:lower() then
            return true
        end
    end
    return false
end

function hook(varlist)
    if varlist[0] == "OnSpawn" and peopleEnter ~= "NONE" then
        for _,player in pairs(getPlayers()) do
            if not includesString(whitelist, player.name) then
                if peopleEnter == "BAN" then
                    say("/ban "..player.name:lower())
                    sleep(2000)
                elseif peopleEnter == "LEAVE" then
                    local x = math.floor(getBot().x / 32)
                    local y = math.floor(getBot().y / 32)
                    local world = getBot().world
                    sendPacket(3, "action|quit_to_exit")
                    sleep(100)
                    sleep(rejoinDelay)
                    warp(world,Bot[getBot().name].doorFarm)
                    sleep(1000)
                    while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                        findPath(x,y)
                        sleep(100)
                    end
                end
            end
        end
    end
end

addHook("hook",hook)

function getCpu()
    local cmd = io.popen('powershell -command "(Get-WmiObject win32_processor | Measure-Object -property LoadPercentage -Average | Select Average).Average"')
    CPU = cmd:read("*l")
    cmd:close()
    return CPU
end

function getRam()
    local cmd = io.popen('powershell -command "$CompObject = Get-WmiObject -Class WIN32_OperatingSystem; $Ram = ((($CompObject.TotalVisibleMemorySize - $CompObject.FreePhysicalMemory)*100)/ $CompObject.TotalVisibleMemorySize); [Math]::Floor($Ram)"')
    RAM = cmd:read("*l")
    cmd:close()
    return RAM
end

function botInfo(info)
    te = os.time() - t
    wh = {}
    wh.url = Bot[getBot().name].webhookLink.."/messages/"..Bot[getBot().name].messageId
    wh.embed = [[{
        "title": "<:exclamation_sign:1011934940096630794> **BOT INFORMATION**",
        "fields" : [
            {"name": "<:pickaxe:1011931845065183313> Bot Info","value": "]]..info..[[","inline": "false"},
            {"name": "<:birth_certificate:1011929949076193291> Bot Name","value": "]]..getBot().name..[[","inline": "true"},
            {"name": "<:heart_monitor:1012587208902987776> Bot Status","value": "]]..getBot().status..[[","inline": "true"},
            {"name": "<:gems:1011931178510602240> Bot Gems","value": "]]..findItem(112)..[[","inline": "true"},
            {"name": "<:globe:1011929997679796254> World Name","value": "]]..getBot().world..[[","inline": "true"},
            {"name": "<:growtopia_scroll:1011972982261944444> World Order","value": "]]..start..[[ / ]]..stop..[[","inline": "true"},
            {"name": "<:fossil_rock:1011972962573881464> World Fossil","value": "]]..fossil..[[","inline": "true"},
            {"name": "<:shop_sign:1012590603172847648> Pack Name","value": "]]..pack..[[","inline": "true"},
            {"name": "<:guest_book:1012588503466528869> Bot Profit","value": "]]..profit..[[ ]]..pack..[[","inline": "true"},
            {"name": "<:CPU:994981162588053565> CPU & RAM","value": "]]..getCpu()..[[% | ]]..getRam()..[[%","inline": "true"},
            {"name": "<:change_of_address:1012566655995490354> World List","value": "]]..strWaktu..[[","inline": "false"},
            {"name": "<:growtopia_clock:1011929976628596746> Bot Uptime","value": "]]..math.floor(te/86400)..[[ Days ]]..math.floor(te%86400/3600)..[[ Hours ]]..math.floor(te%86400%3600/60)..[[ Minutes","inline": "false"}
            ],
        "thumbnail": {"url": "https://komikkamvret.com/wp-content/uploads/2021/04/Pus-Nyangami-Roger-1024x978.png"},
        "color": "]]..math.random(1111111,9999999)..[[",
        "footer": {"text": "]]..os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60)..[["}
    }]]
    wh.edit = true
    webhook(wh)
end

function packInfo(link,id,desc)
    wh = {}
    wh.url = link.."/messages/"..id
    wh.embed = [[{
        "title": "<:exclamation_sign:1011934940096630794> **PACK/SEED INFORMATION**",
        "fields" : [{"name": "Dropped Items","value": "]]..desc..[["}],
        "thumbnail": {"url": "https://komikkamvret.com/wp-content/uploads/2021/04/Pus-Nyangami-Roger-1024x978.png"},
        "color": "]]..math.random(1111111,9999999)..[[",
        "footer": {"text": "]]..os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60)..[["}
    }]]
    wh.edit = true
    webhook(wh)
end

function reconInfo()
    wh = {}
    wh.url = Bot[getBot().name].webhookLink.."/messages/"..Bot[getBot().name].messageId
    wh.content = getBot().name.." status is "..getBot().status.."@everyone"
    wh.edit = false
    webhook(wh)
end

function faceLeft()
    pkt = {}
    pkt.type = 0
    pkt.pos_x = getBot().x
    pkt.pos_y = getBot().y
    pkt.flags = 48
    sendPacketRaw(pkt)
end

function reconnect(world,id,x,y)
    if getBot().status ~= "online" then
        botInfo("Reconnecting")
        sleep(100)
        reconInfo()
        sleep(100)
        if getBot().status == "suspended" then
            botInfo("Suspended")
            sleep(100)
            reconInfo()
            sleep(100)
            while true do
                sleep(10000)
            end
        end
        while true do
            connect()
            sleep(10000)
            while getBot().status == "online" and getBot().world ~= world:upper() do
                sendPacket(3,"action|join_request\nname|"..world:upper())
                sleep(5000)
            end
            if getBot().status == "online" and getBot().world == world:upper() then
                while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                    sendPacket(3,"action|join_request\nname|"..world:upper().."|"..id:upper())
                    sleep(1000)
                end
                if x and y then
                    while getBot().status == "online" and (math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y) do
                        findPath(x,y)
                        sleep(100)
                    end
                end
                break
            end
        end
        botInfo("Succesfully Reconnected")
        sleep(100)
        reconInfo()
        sleep(100)
    end
end

function round(n)
    return n % 1 > 0.5 and math.ceil(n) or math.floor(n)
end

function tileDrop(x,y,num,ping)
    local count = 0
    local stack = 0
    for _,obj in pairs(getObjects()) do
        if math.floor(obj.x / 32) == x and math.floor(obj.y / 32) == y then
            count = count + obj.count
            stack = stack + 1
        end
    end
    if count <= (4000 - num) and (ping or stack < 20) then
        return true
    end
    return false
end

function storePack()
    for _,pack in pairs(packList) do
        for _,tile in pairs(getTiles()) do
            if tile.fg == patokanPack or tile.bg == patokanPack then
                if tileDrop(tile.x,tile.y,findItem(pack)) then
                    while math.floor(getBot().x / 32) ~= (tile.x + 1) or math.floor(getBot().y / 32) ~= tile.y do
                        findPath(tile.x + 1,tile.y)
                        sleep(100)
                        reconnect(storagePack,doorPack,tile.x + 1,tile.y)
                    end
                    while findItem(pack) > 0 and tileDrop(tile.x,tile.y,findItem(pack)) do
                        faceLeft()
                        sleep(100)
                        sendPacket(2,"action|drop\n|itemID|"..pack)
                        sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|"..pack.."|\ncount|"..findItem(pack))
                        sleep(500)
                        reconnect(storagePack,doorPack,tile.x + 1,tile.y)
                    end
                end
            end
            if findItem(pack) == 0 then
                break
            end
        end
    end
end

function itemInfo(ids)
    local result = {name = "null", id = ids, emote = "null"}
    for _,item in pairs(items) do
        if item.id == ids then
            result.name = item.name
            result.emote = item.emote
            return result
        end
    end
    return result
end

function infoPack()
    local store = {}
    for _,obj in pairs(getObjects()) do
        if store[obj.id] then
            store[obj.id].count = store[obj.id].count + obj.count
        else
            store[obj.id] = {id = obj.id, count = obj.count}
        end
    end
    local str = ""
    for _,object in pairs(store) do
        str = str.."\n"..itemInfo(object.id).emote.." "..itemInfo(object.id).name.." : "..object.count.."x"
    end
    return str
end

function storeSeed(world)
    warp(storageSeed,doorSeed)
    sleep(100)
    for _,tile in pairs(getTiles()) do
        if tile.fg == patokanSeed or tile.bg == patokanSeed then
            if tileDrop(tile.x,tile.y,100,true) then
                while math.floor(getBot().x / 32) ~= (tile.x + 1) or math.floor(getBot().y / 32) ~= tile.y do
                    findPath(tile.x + 1,tile.y)
                    sleep(100)
                    reconnect(storageSeed,doorSeed,tile.x + 1,tile.y)
                end
                while findItem(itmSeed) >= 100 and tileDrop(tile.x,tile.y,100,true) do
                    faceLeft()
                    sleep(100)
                    sendPacket(2,"action|drop\n|itemID|"..itmSeed)
                    sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|"..itmSeed.."|\ncount|100")
                    sleep(500)
                    reconnect(storageSeed,doorSeed,tile.x + 1,tile.y)
                end
            end
            if findItem(itmSeed) < 100 then
                break
            end
        end
    end
    packInfo(webhookLinkSeed,messageIdSeed,infoPack())
    sleep(100)
    warp(world,Bot[getBot().name].doorFarm)
    sleep(100)
end

function buy()
    if findItem(112) >= packPrice then
        warp(storagePack,doorPack)
        sleep(100)
        while findItem(112) >= packPrice do
            countBuy = 0
            while findItem(112) >= packPrice do
                if countBuy < packLimit do
                    if getBot().slots - #getInventory() < 10 then
                        sendPacket(2,"action|buy\nitem|upgrade_backpack")
                        sleep(500)
                    end
                    sendPacket(2,"action|buy\nitem|"..packName)
                    sleep(500)
                    profit = profit + 1
                    countBuy = countBuy + 1
                end
                reconnect(storagePack,doorPack)
            end
            storePack()
            sleep(100)
            reconnect(storagePack,doorPack)
        end
        packInfo(webhookLinkPack,messageIdPack,infoPack())
        sleep(100)
    end
end

function includesNumber(table, number)
    for _,num in pairs(table) do
        if num == number then
            return true
        end
    end
    return false
end

function clear()
    for _,item in pairs(getInventory()) do
        if not includesNumber(goods, item.id) then
            sendPacket(2, "action|trash\n|itemID|"..item.id)
            sendPacket(2, "action|dialog_return\ndialog_name|trash_item\nitemID|"..item.id.."|\ncount|"..item.count) 
            sleep(200)
        end
    end
end

function pnb(world)
    if findItem(itmId) >= 5 then
        if not customTile then
            ex = 1
            ye = math.floor(getBot().y / 32)
            if ye > 40 then
                ye = ye - 10
            elseif ye < 11 then
                ye = ye + 10
            end
            if getTile(ex,ye).fg ~= 0 and getTile(ex,ye).fg ~= itmSeed then
                ye = ye - 1
            end
        else
            ex = customX
            ye = customY
        end
        while math.floor(getBot().x / 32) ~= ex or math.floor(getBot().y / 32) ~= ye do
            findPath(ex,ye)
            sleep(100)
        end
        while findItem(itmId) >= tileNumber and findItem(itmSeed) < 190 do
            while tilePlace(ex,ye) do
                for _,i in pairs(tileBreak) do
                    if getTile(ex - 1,ye + i).fg == 0 and getTile(ex - 1,ye + i).bg == 0 then
                        place(itmId,-1,i)
                        sleep(delayPlace)
                        reconnect(world,Bot[getBot().name].doorFarm,ex,ye)
                    end
                end
            end
            while tilePunch(ex,ye) do
                for _,i in pairs(tileBreak) do
                    if getTile(ex - 1,ye + i).fg ~= 0 or getTile(ex - 1,ye + i).bg ~= 0 then
                        punch(-1,i)
                        sleep(delayPunch)
                        reconnect(world,Bot[getBot().name].doorFarm,ex,ye)
                    end
                end
            end
            collect(3)
            reconnect(world,Bot[getBot().name].doorFarm,ex,ye)
        end
        clear()
        sleep(100)
        if separatePlant then
            plant(world)
            sleep(100)
        elseif findItem(itmSeed) >= 190 then
            botInfo("Storing Seed")
            sleep(100)
            storeSeed(world)
            sleep(100)
            botInfo("Farming")
            sleep(100)
        end
        if buyAfterPNB and findItem(112) >= packPrice then
            buy()
            sleep(100)
            warp(world,Bot[getBot().name].doorFarm)
            sleep(100)
            botInfo("Farming")
            sleep(100)
        end
    end
end

function take(world)
    while findItem(itmSeed) == 0 do
        warp(storageSeed,doorSeed)
        sleep(100)
        for _,obj in pairs(getObjects()) do
            if obj.id == itmSeed then
                findPath(round(obj.x / 32),math.floor(obj.y / 32))
                sleep(1000)
                collect(2)
                sleep(1000)
            end
            if findItem(itmSeed) > 0 then
                break
            end
        end
        warp(world,Bot[getBot().name].doorFarm)
        sleep(100)
    end
end

function plant(world)
    for _,tile in pairs(getTiles()) do
        if findItem(itmSeed) == 0 then
            botInfo("Taking Seed")
            sleep(100)
            take(world)
            sleep(100)
            botInfo("Farming")
            sleep(100)
        end
        if tile.flags ~= 0 and tile.y ~= 0 and getTile(tile.x,tile.y - 1).fg == 0 then
            if not blacklistTile or check(tile.x,tile.y) then
                findPath(tile.x,tile.y - 1)
                while getTile(tile.x,tile.y - 1).fg == 0 do
                    place(itmSeed,0,0)
                    sleep(delayPlant)
                    reconnect(world,Bot[getBot().name].doorFarm,tile.x,tile.y - 1)
                end
            end
        end
    end
    if findItem(itmSeed) >= 100 then
        botInfo("Storing Seed")
        sleep(100)
        storeSeed(world)
        sleep(100)
        botInfo("Farming")
        sleep(100)
    end
end

function rotation(world)
    for _,tile in pairs(getTiles()) do
        if findItem(itmSeed) == 0 then
            botInfo("Taking Seed")
            sleep(100)
            take(world)
            sleep(100)
            botInfo("Farming")
            sleep(100)
        end
        if tile.flags ~= 0 and tile.y ~= 0 then
            if getTile(tile.x,tile.y - 1).ready or getTile(tile.x,tile.y - 1).fg == 0 then
                if not blacklistTile or check(tile.x,tile.y) then
                    findPath(tile.x,tile.y - 1)
                    while getTile(tile.x,tile.y - 1).fg == itmSeed do
                        punch(0,0)
                        sleep(delayHarvest)
                        collect(2)
                        reconnect(world,Bot[getBot().name].doorFarm,tile.x,tile.y - 1)
                    end
                    if root then
                        countHit = 0
                        while getTile(tile.x, tile.y).fg == (itmId + 4) do
                            punch(0, 1)
                            sleep(delayHarvest)
                            countHit = countHit + 1
                            if countHit == 3 then
                                sleep(3000)
                                countHit = 0
                            end
                            reconnect(world,Bot[getBot().name].doorFarm,tile.x,tile.y - 1)
                        end
                        clear()
                        sleep(100)
                    end
                    if rotationType == "PLANTHV2" then
                        while getTile(tile.x,tile.y - 1).fg == 0 do
                            place(itmSeed,0,0)
                            sleep(delayPlant)
                            reconnect(world,Bot[getBot().name].doorFarm,tile.x,tile.y - 1)
                        end
                    end
                end
            end
        end
        if findItem(itmId) >= 190 then
            pnb(world)
            sleep(100)
        end
    end
end

function infoFossil()
    fossil = 0
    for _,tile in pairs(getTiles()) do
        if tile.fg == 3918 then
            fossil = fossil + 1
        end
    end
end

while true do
    for index,world in pairs(worlds) do
        if findItem(itmSeed) > 0 then
            warp(world,Bot[getBot().name].doorFarm)
            sleep(100)
        else
            botInfo("Taking Seed")
            sleep(100)
            take(world)
            sleep(100)
        end
        waktuWorld()
        sleep(100)
        botInfo("Starting "..world)
        sleep(1000)
        tt = os.time()
        listNow = index
        bl()
        sleep(100)
        infoFossil()
        sleep(100)
        harvest(world)
        sleep(100)
        pnb(world)
        sleep(100)
        buy()
        sleep(100)
        tt = os.time() - tt
        botInfo("Finished "..world)
        sleep(100)
        waktu[world] = math.floor(tt / 3600).." Hours "..math.floor(tt % 3600 / 60).." Minutes"
        if joinWorldAfterRotation then
            for _,v in pairs(worldToJoin) do
                while getBot().world ~= v:upper() do
                    sendPacket(3,"action|join_request\nname|"..v:upper())
                    sleep(5000)
                end
            end
        end
        if start < stop then
            start = start + 1
        else
            if restartTimer then
                waktu = {}
            end
            start = 1
        end
    end
    if not looping then
        botInfo("Finished All World, Removing Bot !")
        sleep(100)
        removeBot(getBot().name)
        break
    end
end
